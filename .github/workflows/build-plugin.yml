name: WordPress Plugin CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php-version: ['8.4']
        wordpress-version: ['latest']

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, mysqli
          tools: phpunit, composer:v2
          coverage: xdebug

      - name: Install Git
        run: sudo apt-get install -y git

      - name: Install WordPress Test Suite
        run: |
          if [ ! -f "wp-dialogpro/bin/install-wp-tests.sh" ]; then
            echo "WordPress test installation script not found!"
            exit 1
          fi
          bash wp-dialogpro/bin/install-wp-tests.sh wordpress_test root root localhost ${{ matrix.wordpress-version }}

      - name: Install Dependencies
        working-directory: wp-dialogpro
        run: composer install

      - name: List Installed Packages
        working-directory: wp-dialogpro
        run: composer show

      - name: List Test Files
        working-directory: wp-dialogpro
        run: find tests -type f -name '*.php'

      - name: Run PHPUnit Tests
        working-directory: wp-dialogpro
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml ./tests

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-${{ matrix.php-version }}
          path: wp-dialogpro/build/logs/clover.xml
          retention-days: 5

  build:
    name: Build Plugin Package
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Plugin Version
        id: get_version
        run: |
          VERSION=$(grep -m 1 "Version:" wp-dialogpro/wp-dialogpro.php | awk '{print $3}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Distribution Directory
        run: |
          # Create dist directory
          mkdir -p dist/wp-dialogpro

          # Copy required files and directories
          cp -r wp-dialogpro/includes wp-dialogpro/assets wp-dialogpro/languages wp-dialogpro/templates wp-dialogpro/wp-dialogpro.php wp-dialogpro/uninstall.php wp-dialogpro/readme.txt dist/wp-dialogpro/

          # Remove development files
          cd dist/wp-dialogpro
          rm -rf **/*.map
          rm -rf **/.git*
          rm -rf **/node_modules
          rm -rf **/tests
          rm -rf **/.editorconfig
          rm -rf **/.eslintrc
          rm -rf **/.stylelintrc
          rm -rf **/phpunit.xml
          rm -rf **/phpcs.xml
          rm -rf **/composer.json
          rm -rf **/composer.lock
          rm -rf **/package.json
          rm -rf **/package-lock.json
          rm -rf **/webpack.config.js
          rm -rf **/.DS_Store

          # Create ZIP archive
          cd ..
          zip -r wp-dialogpro-${{ steps.get_version.outputs.version }}.zip wp-dialogpro/

      - name: List files
        run: |
          pwd
          ls -R
          
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/wp-dialogpro-${{ steps.get_version.outputs.version }}.zip
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Release of DialogPro v${{ steps.get_version.outputs.version }}

            Please refer to the changelog in readme.txt for details about this release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          #GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wp-dialogpro-${{ steps.get_version.outputs.version }}
          path: dist/wp-dialogpro-${{ steps.get_version.outputs.version }}.zip
          retention-days: 5

  cleanup:
    name: Cleanup Artifacts
    needs: build
    runs-on: ubuntu-latest
    if: always()
    permissions:
      actions: write

    steps:
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner,
              repo,
            });
            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name.startsWith('test-coverage-') || artifact.name.startsWith('wp-dialogpro-')) {
                await github.rest.actions.deleteArtifact({
                  owner,
                  repo,
                  artifact_id: artifact.id,
                });
              }
            }